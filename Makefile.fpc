#
#   Makefile.fpc for Free Prayer Time Calculator (FPTC)
#

[package]
name=rsd
version=0.0.2

[require]
packages=

[target]
programs=rsd
dirs=
exampledirs=

[compiler]

[clean]
files=$(wildcard bin/${TARGET_PROGRAMS} $(addprefix build/,*$(OEXT) *$(PPUEXT) *$(RSTEXT) *.compiled *.lrs *.or *.lfm)) ${MO_FILES} ${TEST_PROGS}

[install]
fpcpackage=n
basedir=usr

[prerules]
TEST_PROGS=$(wildcard bin/test*)
PACKAGES=core/${PACKAGE_NAME}core
PO_FILES=$(wildcard locale/*_*.po)
MO_FILES=$(foreach prog,${TARGET_PROGRAMS},$(patsubst locale/${prog}_%.po,share/locale/%/LC_MESSAGES/${prog}.mo,${PO_FILES}))
LPK_FILTERS= -e 's@AutoUpdate Value=".*"@AutoUpdate Value="Manually"@'
#-----------------------------------------------------------------------------
[rules]
.PHONY: all clean install ide packages

#-----------------------------------------------------------------------------
all:mo_files ide packages

clean:fpc_clean clean_packages

clean_packages:
	${DELTREE} $(wildcard $(addprefix lib/,${PACKAGE_NAME}/*/*/*))

ide:$(addprefix bin/,${TARGET_PROGRAMS})

bin/%:src/ide/%_ide.lpi
	lazbuild $<

packages:$(addprefix lib/rsd/,$(addsuffix .pas,${PACKAGES}) $(addsuffix .lpk,${PACKAGES}))

%.lpk:%.lpk %.pas
	lazbuild -B $<
	sed ${LPK_FILTERS} -i $@

mo_files:${MO_FILES}

share/locale/%/LC_MESSAGES/${PACKAGE_NAME}.mo:locale/${PACKAGE_NAME}_%.po
	${MKDIR} $(dir $@)
	msgfmt -o $@ $<
#-----------------------------------------------------------------------------
# Many C expect 'make install' to copy the binaries to somewhere
# Copy the fptc tree to the install directory and set a link
install:
	# copy rsd to /usr
	${MKDIR} ${INSTALL_PREFIX}/usr
	${COPYTREE} -t ${INSTALL_PREFIX}/usr \
		bin \
		lib \
		share

##########################################################################
# Debian
##########################################################################

ifeq ($(OS_TARGET),linux)

ifndef DEBDIR
DEBDIR=debian
endif

# Build dir
ifndef BUILDDIR
BUILDDIR=$(BASEDIR)/tmp
endif

# Link Tree
ifdef LINKISCOPY
ifndef LINKTREE
LINKTREE:=$(CPPROG) -Rfpl
endif
else
ifndef LINKTREE
LINKTREE:=$(CPPROG) -Rfpl
endif
endif

ifneq ($(wildcard ${DEBDIR}/changelog),)

.PHONY: debcopy deb

DEBPACKAGEVERSION:=$(shell head -n 1 ${DEBDIR}/changelog | awk '{ print $$2 }' | tr -d '[()]')
DEBVERSION=$(firstword $(subst -, ,${DEBPACKAGEVERSION}))
DEBBUILD=$(lastword $(subst -, ,${DEBPACKAGEVERSION}))
DEBSRC=${PACKAGE_NAME}-${DEBVERSION}
DEBSRCDIR=${BUILDDIR}/${DEBSRC}
DEBSRC_ORIG=${PACKAGE_NAME}_${DEBVERSION}.orig
BUILDDATE=$(shell /bin/date --utc +%Y%m%d)
ifdef MENTORS
DEB_BUILDPKG_OPT=-sa
else
DEB_BUILDPKG_OPT=
endif
ifdef NODOCS
	DEB_BUILDPKG_OPT+= -B
endif
ifeq (${DEBBUILD},0)
DEBUSESVN=1
endif
ifeq (${DEBBUILD},1)
DEBUSESVN=1
endif
ifeq (${DEBBUILD},)
DEBUSESVN=1
endif
ifdef SNAPSHOT
DEBUSESVN=1
endif
ifeq ($(wildcard ${DEBSRC_ORIG}.tar.xz),)
ifndef DEBUSESVN
$(error Need "${DEBSRC_ORIG}.tar.xz" to build for DEBBUILD = "${DEBBUILD}" > 1)
endif
endif
ifndef SIGN
DEB_BUILDPKG_OPT+= -us -uc
endif

debcheck:
ifneq ($(DEBVERSION),$(PACKAGE_VERSION))
	@$(ECHO) "Debian version ($(DEBVERSION)) is not correct, expect $(PACKAGE_VERSION)"
	@exit 1
endif

debcopy: clean
	${DELTREE} ${BUILDDIR}
	${MKDIRTREE} ${DEBSRCDIR}
ifdef DEBUSESVN
	$(LINKTREE) -t $(DEBSRCDIR) \
		Makefile.fpc \
		doc \
		lib \
		share \
		src
	echo -e "const\n  RevisionStr = '${SVNVERSION}';" > $(DEBSRCDIR)/version.inc
else
	tar -C ${BUILDDIR} -vaxf ${DEBSRC_ORIG}.tar.xz ${DEBSRC}
	${DELTREE} $(DEBSRCDIR)/debian
endif

debsetup:
	${COPYTREE} ${DEBDIR} $(DEBSRCDIR)/debian
ifdef SNAPSHOT
	sed -e "s/${DEBPACKAGEVERSION}/${DEBPACKAGEVERSION}-${BUILDDATE}/" $(DEBSRCDIR)/debian/changelog > $(DEBSRCDIR)/debian/changelog.tmp
	${MOVE} $(DEBSRCDIR)/debian/changelog.tmp $(DEBSRCDIR)/debian/changelog
endif
	chmod 755 $(DEBSRCDIR)/debian/rules
	find $(DEBSRCDIR) -name '.svn' | xargs ${DELTREE}
	find $(DEBSRCDIR) -name 'Makefile' | xargs ${DELTREE}

debbuild:
	cd ${DEBSRCDIR} ; dpkg-buildpackage ${DEB_BUILDPKG_OPT}

debcheckpolicy:
ifdef LINTIAN
	cd ${DEBSRCDIR} ; lintian -I -i ../*.changes
endif

debclean:
ifndef DEBUSESVN
	${DEL} ${BUILDDIR}/${DEBSRC_ORIG}.tar.xz
endif
	mv -v -t .. \
	$(DEBSRCDIR)/../*.changes \
	$(DEBSRCDIR)/../*.deb \
	$(DEBSRCDIR)/../*.dsc \
	$(DEBSRCDIR)/../*.buildinfo \
	$(DEBSRCDIR)/../*.xz
	${DELTREE} $(DEBSRCDIR)
	rmdir $(BUILDDIR)

deb: debcheck debcopy deborigtarxz debsetup debbuild debcheckpolicy debclean

deborigtarxz:
ifdef DEBUSESVN
	#$(MAKE) fpc_zipinstall USETAR=y ZIPTARGET=debcopy PACKDIR=$(DEBSRCDIR) FULLZIPNAME=${DEBSRC_ORIG}
	tar -C ${BUILDDIR} -vacf ${BUILDDIR}/${DEBSRC_ORIG}.tar.xz --exclude-vcs ${DEBSRC}
else
	${LINKTREE} ${DEBSRC_ORIG}.tar.xz ${BUILDDIR}/${DEBSRC_ORIG}.tar.xz
endif

endif   # changelog found

endif
